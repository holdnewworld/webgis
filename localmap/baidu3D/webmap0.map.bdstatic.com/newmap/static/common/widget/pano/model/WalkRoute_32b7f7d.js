define("common:widget/pano/model/WalkRoute.js",function(t){var n=t("common:widget/pano/base/service.js"),e=t("common:widget/pano/base/util.js"),r=["","直走","向右前方转","右转","向右后方转","向后转","向左后方转","左转","向左前方转","左转穿过马路继续向前","右转穿过马路继续向前","左转穿过马路往回走","右转穿过马路往回走","正北方向","东北方向","正东方向","东南方向","正南方向","西南方向","正西方向","西北方向","经#WalkType#穿过马路并往回走","经#WalkType#穿过马路并继续向前","到路口斜对面并继续向前","到路口斜对面，向左前方转","到路口斜对面，左转","到路口斜对面，向左后方转","到路口斜对面，向右前方转","到路口斜对面，右转","到路口斜对面，向右后方转","到路口斜对面，直走","继续向前","向左前方转过#WalkType#","左转过#WalkType#","向左后方转过#WalkType#","向右前方转过#WalkType#","右转过#WalkType#","向右后方转过#WalkType#","直走过#WalkType#","继续向前"],a=["","直走","向右前方转","右转","向右后方转","向后转","向左后方转","左转","向左前方转"],i=["","从起点出发","到达目的地","途经点","走"],o=["","环岛","无属性道路","主路","高速连接路","交叉点内路段","连接道路","停车场内部道路","服务区内部道路","桥","步行街","辅路","匝道","全封闭道路","未定义交通区域","POI连接路","隧道","步行道","公交专用道","提前右转道","广场内部道路","公园内部道路"],s=["","人行道","天桥","地下通道","人行通道","直梯","扶梯","阶梯","斜坡","索道"],u=function(t,n){if(!t)return null;var t=e.parse2Geo(t),r=t.points.split(";");return r=n?e.each(r,function(t){var n=t.split(",");return new BMap.Point(n[0],n[1])},!0):e.each(r,function(t){var n=t.split(",");return{x:n[0],y:n[1]}},!0),1===r.length?r[0]:r},p=function(t,n,e){var i="";if(n>0){var o=e>0?21==t||22==t?"<span>"+a[e]+"</span>，":"<span>"+a[e]+"过"+s[n]+"</span>，":"<span>过"+s[n]+"</span>，";t>0&&13>t?i=o+r[t]:t>=21?i=o+r[t].replace(/#WalkType#/gi,"<span>"+s[n]+"</span>"):(i="<span>"+a[e]+"过"+s[n]+"</span>",0!=t&&(i+="，"))}else i=r[t].replace(/#WalkType#/gi,"<span>"+s[n]+"</span>");return i},l=function(t,n){var e=n&&t.n==n.n?"继续":"",r=""==t.n?o[t.t]:"过街天桥"==t.n?"天桥":t.n,a=t.t>=22?"过":"沿";return 0==t.d?0==t.wt?""==r?"":"至"+r:"过"+s[t.wt]+"至"+r:""==o[t.t]?"":e+a+r},c=function(t){return 10>t?t="10米":t>10&&1e3>=t?t=10*(t/10).toFixed(0)+"米":t>1e3&&(t=(t/1e3).toFixed(1)+"公里"),t},d=function(t){var n=t.rss,r=t.kps,a=t.kps.length,s=e.each(t.kps,function(t,e,s){var d=t.rt,v=c(n[e].d),f=p(t.tt,n[e].wt,t.extt),h="",y=u(t.pt);if(0==e)return void 0;if(1==e){var f=p(r[0].tt,n[e].wt,t.extt);h="从起点向"+f+"出发，",f=p(t.tt,n[e].wt,t.extt);var m=l(n[e],e>0?n[e-1]:null),w=T.trim(n[e+1].n);m=""==m?o[n[e].t]:m,w=""==w?o[n[e+1].t]:w;var x="进入",g=n[e+1].t;9==g||12==g?x="上":(0==g||g>=22||n[e].n==n[e+1].n&&1!=g)&&(x="",w=""),(9==t.tt||10==t.tt||11==t.tt||12==t.tt)&&(x="",w="");var k=20==n[e].t||21==n[e].t?"离开"+n[e].n+"，":"",W=n[e].t>=22?"":i[t.rt]+v;if(h+=m+W+"，"+k+f+x+w,3==r[e+1].rt){var d=r[e+1].rt,P=i[d];h+="到达"+viaNamel}}else if(e==a-2){var m=l(n[e],e>0?n[e-1]:null);m=""==m?o[n[e].t]:m;var k="",f=p(t.tt,n[e].wt,t.extt),W=n[e].t>=22?"":i[t.rt]+v;h=m+W+k+f}else{if(e==a-1&&2==d){var j=s[s.length-1];return a>3?h=j.text+"，到达终点":(3==a&&0!=n[1].wt&&(h="，"),h+=j.text+"到达终点"),void(j.text=h)}var m=l(n[e],e>0?n[e-1]:null),w=n[e+1].n;m=""==m?o[n[e].t]:m,w=""==w?o[n[e+1].t]:w,m=T.trim(m),w=T.trim(w);var d=r[e+1].rt,x="进入",g=n[e+1].t;if(9==g||12==g?x="上":(0==g||g>=22||n[e].n==n[e+1].n&&1!=g)&&(x="",w=""),(9==t.tt||10==t.tt||11==t.tt||12==t.tt)&&(x="",w=""),3==d){var P=i[d];h=m+i[t.rt]+disName+"，到达"+P}else{var f=p(r[e].tt,n[e].wt,r[e].extt),k=20==n[e].t||21==n[e].t?"离开"+n[e].n+"，":"",W=n[e].t>=22?"":i[t.rt]+v;h=m+W+"，"+k+f+x+w}}return{text:h,point:y}},!0);return s},v=function(t){var n={},r=e.each([t.result.start,t.result.end],function(t,n){var e=T.isArray(t)?t[0]:t,r=e.pt.split(",");return{wd:e.wd,name:e.wd,poiType:0==n?"FF0101":"FF0102",type:n,uid:e.uid,text:e.wd,point:{x:r[0],y:r[1]}}},!0);n.start=r[0],n.end=r[1];var a=d(t.content);return a.unshift(n.start),a.push(n.end),n.steps=a,n},f=function(){this._json={},this._data={}};return baidu.lang.inherits(f,baidu.lang.Class),T.object.extend(f.prototype,{fetch:function(t){var e=this;return t||(t="NavWalk"==currentComponent.name?currentComponent.modelQuery:null)?n.getComponentResultByQuery(t).then(function(t){e._json=t,e._data=v(t)}):null},getSchemeTransfer:function(){var t=this._data;if(t.getPanoPoints)return t;var r=e.each(t.steps,function(t){return[t.point.x,t.point.y].join(",")},!0);return n.getPanoPoints(r,"walk").then(function(n){return e.each(n.content,function(n,e){if(n){var r=t.steps[e];for(var a in n){var i=a.toLowerCase();"name"!==i&&(r[i]=n[a])}var o=r.point;o&&(r.dir||(r.dir=90-180*Math.atan2(o.y-r.panoy,o.x-r.panox)/Math.PI),r.dir<0&&(r.dir+=360))}}),t.getPanoPoints=!0,t})},getStart:function(){return this._data.start},getEnd:function(){return this._data.end}}),f});